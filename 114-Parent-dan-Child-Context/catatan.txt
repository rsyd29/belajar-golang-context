Parent dan Child Context
1. Context menganut konsep parent dan child.
2. Artinya, saat kita membuat context, kita bisa membuat child context dari context yang sudah ada.
3. Parent context bisa memiliki banyak child, namun child hanya bisa memiliki satu parent context.
4. Konsep ini mirip dengan pewarisan di pemrograman berorientasi object.

Jadi kita bisa membuat sebuah context dari context yang sudah ada. Jadi semua fitur yang ada pada parent maka otomatis
child juga memiliki fitur yang sama seperti parent.

Hubungan Antara Parent dan Child Context
1. Parent dan Child context akan selalu terhubung.
Jadi tidak bisa dilepas.
2. Saat nanti kita melakukan misal pembatalan context A, maka semua child dan sub child dari context A akan ikut
dibatalkan.
Jadi semua turunannya yaitu child maka akan dibatalkan.
3. Namun jika misal kita membatalkan context B, hanya context B dan semua chid dan sub child nya yang dibatalkan, parent
context B tidak akan ikut dibatalkan.
4. Begitu juga nanti saat kita menyisipkan data ke dalam context A, semua child dan sub child nya bisa mendapatkan data
tersebut.
5. Namun jika kita menyisipkan data di context B, hanya context B dan semua child dan sub child nya yang mendapat data,
parent context B tidak akan mendapat data.

Immutable
1. Context merupakan object yang immutable, artinya setelah Context dibuat, dia tidak bisa diubah lagi.
2. Ketika kita menambahkan value ke dalam context, atau menambahkan pengaturan timeout dan yang lainnya, secara otomatis
akan membentuk child context baru, bukan merubah context tersebut.

Cara Membuat Child Context
1. Cara membuat child context ada banyak caranya, yang akan kita bahas di materi-materi selanjutnya.